name: Build

on:
  workflow_call:
    inputs:
      rust:
        type: string
      solana:
        type: string
  workflow_dispatch:
    inputs:
      rust:
        description: Rust version
        default: 1.70.0
        required: true
        type: string
      solana:
        description: Solana version
        default: 1.16.18
        required: true
        type: string

env:
  CACHE: true

jobs:
  build_cli:
    name: Build
    strategy:
      matrix:
        os:
          - buildjet-8vcpu-ubuntu-2004
          - macos-13
          - macos-14
    runs-on: ${{ matrix.os }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Load environment variables
        run: cat .github/.env >> $GITHUB_ENV

      - name: Install Rust
        uses: nifty-oss/actions/install-rust@v1
        with:
          toolchain: ${{ inputs.rust || env.RUST_VERSION }}

      - name: Install Solana
        uses: ./.github/actions/install-solana
        with:
          version: ${{ inputs.solana || env.SOLANA_VERSION }}
          cache: ${{ env.CACHE }}

      - name: Cache Rust CLI dependencies
        uses: nifty-oss/actions/buildjet-cache-crate@v1
        with:
          folder: '.'
          key: rust-cli-${{ matrix.os }}

      - name: Build Rust CLI
        id: build
        working-directory: '.'
        run: |
          cargo build --all-features --release --bin nifty

          if [[ "${{ runner.os }}" == "Linux" ]]; then
            extension="ubuntu-2004"
          else
            extension="${{ matrix.os }}"
          fi

          mv ./target/release/nifty ./target/release/nifty-cli-${extension}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rust-cli-build-${{ matrix.os }}
          path: ./target/release/*nifty-cli-${{ steps.build.outputs.extension }}
          if-no-files-found: error

      - name: Release Tags
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./target/release/*nifty-cli-${{ steps.build.outputs.extension }}
